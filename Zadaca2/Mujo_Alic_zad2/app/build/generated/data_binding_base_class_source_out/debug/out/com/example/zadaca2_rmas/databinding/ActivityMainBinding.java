// Generated by view binder compiler. Do not edit!
package com.example.zadaca2_rmas.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.zadaca2_rmas.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityMainBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final TextView BirajBoju;

  @NonNull
  public final SeekbarsBinding SeekBars;

  @NonNull
  public final ViewwidgetBinding colorView;

  @NonNull
  public final TextView headerTitle;

  @NonNull
  public final TextView hexValueText;

  private ActivityMainBinding(@NonNull ConstraintLayout rootView, @NonNull TextView BirajBoju,
      @NonNull SeekbarsBinding SeekBars, @NonNull ViewwidgetBinding colorView,
      @NonNull TextView headerTitle, @NonNull TextView hexValueText) {
    this.rootView = rootView;
    this.BirajBoju = BirajBoju;
    this.SeekBars = SeekBars;
    this.colorView = colorView;
    this.headerTitle = headerTitle;
    this.hexValueText = hexValueText;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityMainBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityMainBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_main, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityMainBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.BirajBoju;
      TextView BirajBoju = ViewBindings.findChildViewById(rootView, id);
      if (BirajBoju == null) {
        break missingId;
      }

      id = R.id.SeekBars;
      View SeekBars = ViewBindings.findChildViewById(rootView, id);
      if (SeekBars == null) {
        break missingId;
      }
      SeekbarsBinding binding_SeekBars = SeekbarsBinding.bind(SeekBars);

      id = R.id.colorView;
      View colorView = ViewBindings.findChildViewById(rootView, id);
      if (colorView == null) {
        break missingId;
      }
      ViewwidgetBinding binding_colorView = ViewwidgetBinding.bind(colorView);

      id = R.id.headerTitle;
      TextView headerTitle = ViewBindings.findChildViewById(rootView, id);
      if (headerTitle == null) {
        break missingId;
      }

      id = R.id.hexValueText;
      TextView hexValueText = ViewBindings.findChildViewById(rootView, id);
      if (hexValueText == null) {
        break missingId;
      }

      return new ActivityMainBinding((ConstraintLayout) rootView, BirajBoju, binding_SeekBars,
          binding_colorView, headerTitle, hexValueText);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
